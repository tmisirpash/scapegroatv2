/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Groat, GroatInterface } from "../Groat";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_stake",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "_maxPlayers",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "groater",
        type: "address",
      },
    ],
    name: "Groated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "joiner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "Join",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "leaver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "Leave",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "Winner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "partialFulfill",
        type: "bool",
      },
    ],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "groatIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPlayers",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "queue",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queuePtr",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "removeEntries",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160005560ff600260126101000a81548160ff021916908360ff1602179055503480156200003257600080fd5b5060405162001d7638038062001d7683398181016040528101906200005891906200029f565b6000826fffffffffffffffffffffffffffffffff1611620000b0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a79062000347565b60405180910390fd5b60018160ff1611620000f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f090620003b9565b60405180910390fd5b60006001826200010a91906200040a565b60ff16836200011a919062000475565b6fffffffffffffffffffffffffffffffff16146200016f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016690620004fd565b60405180910390fd5b81600260006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080600260106101000a81548160ff021916908360ff160217905550600181620001d291906200040a565b60ff1682620001e291906200051f565b82620001ef919062000557565b6fffffffffffffffffffffffffffffffff166001819055505050620005a2565b600080fd5b60006fffffffffffffffffffffffffffffffff82169050919050565b6200023b8162000214565b81146200024757600080fd5b50565b6000815190506200025b8162000230565b92915050565b600060ff82169050919050565b620002798162000261565b81146200028557600080fd5b50565b60008151905062000299816200026e565b92915050565b60008060408385031215620002b957620002b86200020f565b5b6000620002c9858286016200024a565b9250506020620002dc8582860162000288565b9150509250929050565b600082825260208201905092915050565b7f5374616b65206d757374206265206e6f6e2d7a65726f2e000000000000000000600082015250565b60006200032f601783620002e6565b91506200033c82620002f7565b602082019050919050565b60006020820190508181036000830152620003628162000320565b9050919050565b7f4d617820706c6179657273206d757374206265203e20312e0000000000000000600082015250565b6000620003a1601883620002e6565b9150620003ae8262000369565b602082019050919050565b60006020820190508181036000830152620003d48162000392565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620004178262000261565b9150620004248362000261565b9250828203905060ff81111562000440576200043f620003db565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620004828262000214565b91506200048f8362000214565b925082620004a257620004a162000446565b5b828206905092915050565b7f5374616b652073686f756c642062652064697669646564206576656e6c792e00600082015250565b6000620004e5601f83620002e6565b9150620004f282620004ad565b602082019050919050565b600060208201905081810360008301526200051881620004d6565b9050919050565b60006200052c8262000214565b9150620005398362000214565b9250826200054c576200054b62000446565b5b828204905092915050565b6000620005648262000214565b9150620005718362000214565b925082820190506fffffffffffffffffffffffffffffffff8111156200059c576200059b620003db565b5b92915050565b6117c480620005b26000396000f3fe6080604052600436106100915760003560e01c80634c2412a2116100595780634c2412a21461017f57806359fe06e0146101aa57806363bd1d4a146101d557806378b77a9414610200578063d69a18761461023d57610091565b8063056d9f28146100965780631eaeda03146100d35780632970ac44146100fe5780633218b99d146101295780633a4b66f114610154575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610fca565b610259565b6040516100ca9190611038565b60405180910390f35b3480156100df57600080fd5b506100e861028c565b6040516100f5919061106c565b60405180910390f35b34801561010a57600080fd5b50610113610292565b6040516101209190611096565b60405180910390f35b34801561013557600080fd5b5061013e6102a5565b60405161014b91906110cc565b60405180910390f35b34801561016057600080fd5b506101696102b8565b6040516101769190611112565b60405180910390f35b34801561018b57600080fd5b506101946102da565b6040516101a19190611096565b60405180910390f35b3480156101b657600080fd5b506101bf6102ed565b6040516101cc9190611096565b60405180910390f35b3480156101e157600080fd5b506101ea610300565b6040516101f7919061106c565b60405180910390f35b34801561020c57600080fd5b5061022760048036038101906102229190610fca565b610306565b6040516102349190611096565b60405180910390f35b61025760048036038101906102529190611159565b610743565b005b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600260119054906101000a900460ff1681565b600260139054906101000a900460ff1681565b600260009054906101000a90046fffffffffffffffffffffffffffffffff1681565b600260109054906101000a900460ff1681565b600260129054906101000a900460ff1681565b60015481565b6000808260ff161161034d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610344906111e3565b60405180910390fd5b6000600260119054906101000a900460ff169050600260109054906101000a900460ff1660ff168160ff16036103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103af9061124f565b60405180910390fd5b73dead00000000000000004206942069420694206973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361040457600080fd5b6000805b8260ff168160ff1610801561042257508460ff168260ff16105b156105cc573373ffffffffffffffffffffffffffffffffffffffff16600360008360ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104a4578061049d9061129e565b9050610408565b826104ae906112c7565b92508260ff168160ff161461054f57600360008460ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008360ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b73dead000000000000000042069420694206942069600360008560ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816105c59061129e565b9150610408565b60008260ff16036105e3576000935050505061073e565b82600260116101000a81548160ff021916908360ff16021790555060003373ffffffffffffffffffffffffffffffffffffffff168360ff16600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1661065691906112f0565b60405161066290611363565b60006040518083038185875af1925050503d806000811461069f576040519150601f19603f3d011682016040523d82523d6000602084013e6106a4565b606091505b50509050806106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df906113c4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f633d700f1d211efa578117ee47d33ab6c51fb605854853b0389f4f376cffa78c8460405161072e9190611096565b60405180910390a2829450505050505b919050565b600054431015610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f9061124f565b60405180910390fd5b60003490506000816fffffffffffffffffffffffffffffffff16116107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d9906111e3565b60405180910390fd5b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff168261080e9190611413565b6fffffffffffffffffffffffffffffffff1614610860576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085790611490565b60405180910390fd5b73dead00000000000000004206942069420694206973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036108ac57600080fd5b6000600260119054906101000a900460ff1690506000600260109054906101000a900460ff1690508060ff168260ff16036108e657600091505b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff168461091291906114b0565b90506000838361092291906114e1565b905060008160ff168360ff1610610939578161093b565b825b9050868061094e57508260ff168160ff16145b61098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098490611562565b60405180910390fd5b600260139054906101000a900460ff16610a0f578360ff16446040516020016109b691906115a3565b6040516020818303038152906040528051906020012060001c6109d991906115be565b600260126101000a81548160ff021916908360ff1602179055506001600260136101000a81548160ff0219169083151502179055505b8085610a1b91906115ef565b945084600260116101000a81548160ff021916908360ff1602179055508360ff168560ff1603610a7457604b43610a529190611624565b6000819055506000600260136101000a81548160ff0219169083151502179055505b610a8a338287610a8491906114e1565b87610be6565b8260ff168160ff161015610b8f5760003373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168386610aee91906114e1565b60ff16610afb91906112f0565b604051610b0790611363565b60006040518083038185875af1925050503d8060008114610b44576040519150601f19603f3d011682016040523d82523d6000602084013e610b49565b606091505b5050905080610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b84906116a4565b60405180910390fd5b505b3373ffffffffffffffffffffffffffffffffffffffff167feea93999f2203f0dd046674223b9fab69fba9d5be3b62338e414130538ab3f0f82604051610bd59190611096565b60405180910390a250505050505050565b60008282610bf491906114e1565b60ff1667ffffffffffffffff811115610c1057610c0f6116c4565b5b604051908082528060200260200182016040528015610c3e5781602001602082028036833780820191505090505b509050600083905060005b8360ff168260ff161015610d5657600360008360ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838260ff1681518110610ca757610ca66116f3565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505085600360008460ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081610d439061129e565b915080610d4f9061129e565b9050610c49565b849150600090505b82518160ff161015610f84576000838260ff1681518110610d8257610d816116f3565b5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610e09575073dead00000000000000004206942069420694206973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15610f6657600260129054906101000a900460ff1660ff168360ff1603610e72578073ffffffffffffffffffffffffffffffffffffffff167f637cb401e63fa31717aed0b93d8fc01f5cc67990a8b3fe10b667c99ce5e8583e60405160405180910390a2610f65565b60008173ffffffffffffffffffffffffffffffffffffffff16600154604051610e9a90611363565b60006040518083038185875af1925050503d8060008114610ed7576040519150601f19603f3d011682016040523d82523d6000602084013e610edc565b606091505b5050905080610f20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f179061176e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f745c90b656b4aafe296c8ca35aeacfe56cb96c90e1d320e5da643fff1051b6c060405160405180910390a2505b5b82610f709061129e565b925081610f7c9061129e565b915050610d5e565b505050505050565b600080fd5b600060ff82169050919050565b610fa781610f91565b8114610fb257600080fd5b50565b600081359050610fc481610f9e565b92915050565b600060208284031215610fe057610fdf610f8c565b5b6000610fee84828501610fb5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102282610ff7565b9050919050565b61103281611017565b82525050565b600060208201905061104d6000830184611029565b92915050565b6000819050919050565b61106681611053565b82525050565b6000602082019050611081600083018461105d565b92915050565b61109081610f91565b82525050565b60006020820190506110ab6000830184611087565b92915050565b60008115159050919050565b6110c6816110b1565b82525050565b60006020820190506110e160008301846110bd565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61110c816110e7565b82525050565b60006020820190506111276000830184611103565b92915050565b611136816110b1565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b60006020828403121561116f5761116e610f8c565b5b600061117d84828501611144565b91505092915050565b600082825260208201905092915050565b7f4e6565647320746f206265206e6f6e2d7a65726f2e0000000000000000000000600082015250565b60006111cd601583611186565b91506111d882611197565b602082019050919050565b600060208201905081810360008301526111fc816111c0565b9050919050565b7f47616d6520696e2070726f67726573732e000000000000000000000000000000600082015250565b6000611239601183611186565b915061124482611203565b602082019050919050565b600060208201905081810360008301526112688161122c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112a982610f91565b915060ff82036112bc576112bb61126f565b5b600182019050919050565b60006112d282610f91565b9150600082036112e5576112e461126f565b5b600182039050919050565b60006112fb82611053565b915061130683611053565b925082820261131481611053565b9150828204841483151761132b5761132a61126f565b5b5092915050565b600081905092915050565b50565b600061134d600083611332565b91506113588261133d565b600082019050919050565b600061136e82611340565b9150819050919050565b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b60006113ae601283611186565b91506113b982611378565b602082019050919050565b600060208201905081810360008301526113dd816113a1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061141e826110e7565b9150611429836110e7565b925082611439576114386113e4565b5b828206905092915050565b7f4e6565647320746f206265206d756c7469706c65206f66207374616b652e0000600082015250565b600061147a601e83611186565b915061148582611444565b602082019050919050565b600060208201905081810360008301526114a98161146d565b9050919050565b60006114bb826110e7565b91506114c6836110e7565b9250826114d6576114d56113e4565b5b828204905092915050565b60006114ec82610f91565b91506114f783610f91565b9250828203905060ff8111156115105761150f61126f565b5b92915050565b7f4578616374206f72646572206e6f74206d65742e000000000000000000000000600082015250565b600061154c601483611186565b915061155782611516565b602082019050919050565b6000602082019050818103600083015261157b8161153f565b9050919050565b6000819050919050565b61159d61159882611053565b611582565b82525050565b60006115af828461158c565b60208201915081905092915050565b60006115c982611053565b91506115d483611053565b9250826115e4576115e36113e4565b5b828206905092915050565b60006115fa82610f91565b915061160583610f91565b9250828201905060ff81111561161e5761161d61126f565b5b92915050565b600061162f82611053565b915061163a83611053565b92508282019050808211156116525761165161126f565b5b92915050565b7f526566756e64206661696c65642e000000000000000000000000000000000000600082015250565b600061168e600e83611186565b915061169982611658565b602082019050919050565b600060208201905081810360008301526116bd81611681565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b6000611758601083611186565b915061176382611722565b602082019050919050565b600060208201905081810360008301526117878161174b565b905091905056fea2646970667358221220c7c1858fb0a769f9f03d32c7a0f359a9db4bd069e9304da97cb07c7ce1a6cbe264736f6c63430008110033";

type GroatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Groat__factory extends ContractFactory {
  constructor(...args: GroatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stake: PromiseOrValue<BigNumberish>,
    _maxPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Groat> {
    return super.deploy(_stake, _maxPlayers, overrides || {}) as Promise<Groat>;
  }
  override getDeployTransaction(
    _stake: PromiseOrValue<BigNumberish>,
    _maxPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stake, _maxPlayers, overrides || {});
  }
  override attach(address: string): Groat {
    return super.attach(address) as Groat;
  }
  override connect(signer: Signer): Groat__factory {
    return super.connect(signer) as Groat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroatInterface {
    return new utils.Interface(_abi) as GroatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Groat {
    return new Contract(address, _abi, signerOrProvider) as Groat;
  }
}
