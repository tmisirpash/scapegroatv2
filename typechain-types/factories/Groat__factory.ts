/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Groat, GroatInterface } from "../Groat";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_stake",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "_maxPlayers",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "partialFulfill",
        type: "bool",
      },
    ],
    name: "depositEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "groatIndex",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPlayers",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "queue",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queuePtr",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "removeEntries",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016000556001600260126101000a81548160ff021916908360ff1602179055503480156200003257600080fd5b50604051620019913803806200199183398181016040528101906200005891906200029f565b6000826fffffffffffffffffffffffffffffffff1611620000b0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a79062000347565b60405180910390fd5b60018160ff1611620000f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f090620003b9565b60405180910390fd5b60006001826200010a91906200040a565b60ff16836200011a919062000475565b6fffffffffffffffffffffffffffffffff16146200016f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016690620004fd565b60405180910390fd5b81600260006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555080600260106101000a81548160ff021916908360ff160217905550600181620001d291906200040a565b60ff1682620001e291906200051f565b82620001ef919062000557565b6fffffffffffffffffffffffffffffffff166001819055505050620005a2565b600080fd5b60006fffffffffffffffffffffffffffffffff82169050919050565b6200023b8162000214565b81146200024757600080fd5b50565b6000815190506200025b8162000230565b92915050565b600060ff82169050919050565b620002798162000261565b81146200028557600080fd5b50565b60008151905062000299816200026e565b92915050565b60008060408385031215620002b957620002b86200020f565b5b6000620002c9858286016200024a565b9250506020620002dc8582860162000288565b9150509250929050565b600082825260208201905092915050565b7f5374616b65206d757374206265206e6f6e2d7a65726f2e000000000000000000600082015250565b60006200032f601783620002e6565b91506200033c82620002f7565b602082019050919050565b60006020820190508181036000830152620003628162000320565b9050919050565b7f4d617820706c6179657273206d757374206265203e20312e0000000000000000600082015250565b6000620003a1601883620002e6565b9150620003ae8262000369565b602082019050919050565b60006020820190508181036000830152620003d48162000392565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620004178262000261565b9150620004248362000261565b9250828203905060ff81111562000440576200043f620003db565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000620004828262000214565b91506200048f8362000214565b925082620004a257620004a162000446565b5b828206905092915050565b7f5374616b652073686f756c642062652064697669646564206576656e6c792e00600082015250565b6000620004e5601f83620002e6565b9150620004f282620004ad565b602082019050919050565b600060208201905081810360008301526200051881620004d6565b9050919050565b60006200052c8262000214565b9150620005398362000214565b9250826200054c576200054b62000446565b5b828204905092915050565b6000620005648262000214565b9150620005718362000214565b925082820190506fffffffffffffffffffffffffffffffff8111156200059c576200059b620003db565b5b92915050565b6113df80620005b26000396000f3fe6080604052600436106100865760003560e01c80634c2412a2116100595780634c2412a21461014957806359fe06e01461017457806363bd1d4a1461019f57806378b77a94146101ca578063d69a18761461020757610086565b8063056d9f281461008b5780631eaeda03146100c85780632970ac44146100f35780633a4b66f11461011e575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610c6d565b610223565b6040516100bf9190610cdb565b60405180910390f35b3480156100d457600080fd5b506100dd610256565b6040516100ea9190610d0f565b60405180910390f35b3480156100ff57600080fd5b5061010861025c565b6040516101159190610d39565b60405180910390f35b34801561012a57600080fd5b5061013361026f565b6040516101409190610d7f565b60405180910390f35b34801561015557600080fd5b5061015e610291565b60405161016b9190610d39565b60405180910390f35b34801561018057600080fd5b506101896102a4565b6040516101969190610d39565b60405180910390f35b3480156101ab57600080fd5b506101b46102b7565b6040516101c19190610d0f565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610c6d565b6102bd565b6040516101fe9190610d39565b60405180910390f35b610221600480360381019061021c9190610dd2565b610656565b005b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600260119054906101000a900460ff1681565b600260009054906101000a90046fffffffffffffffffffffffffffffffff1681565b600260109054906101000a900460ff1681565b600260129054906101000a900460ff1681565b60015481565b6000808260ff1611610304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fb90610e5c565b60405180910390fd5b6000600260119054906101000a900460ff169050600260109054906101000a900460ff1660ff168160ff160361036f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036690610ec8565b60405180910390fd5b6000805b8260ff168160ff1610801561038d57508460ff168260ff16105b15610545573373ffffffffffffffffffffffffffffffffffffffff16600360008360ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461040f578061040890610f17565b9050610373565b8261041990610f40565b92508260ff168160ff16146104ba57600360008460ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008360ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b73dead000000000000000042069420694206942069600360008560ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508061053090610f17565b9050818061053d90610f17565b925050610373565b82600260116101000a81548160ff021916908360ff16021790555060003373ffffffffffffffffffffffffffffffffffffffff168360ff16600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff166105b89190610f69565b6040516105c490610fdc565b60006040518083038185875af1925050503d8060008114610601576040519150601f19603f3d011682016040523d82523d6000602084013e610606565b606091505b505090508061064a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106419061103d565b60405180910390fd5b82945050505050919050565b60005443101561069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290610ec8565b60405180910390fd5b60003490506000816fffffffffffffffffffffffffffffffff16116106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec90610e5c565b60405180910390fd5b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff1682610721919061108c565b6fffffffffffffffffffffffffffffffff1614610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611109565b60405180910390fd5b6000600260119054906101000a900460ff1690506000600260109054906101000a900460ff1690508060ff168260ff16036107ad57600091505b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff16846107d99190611129565b9050600083836107e9919061115a565b905060008160ff168360ff16106108005781610802565b825b9050868061081557508260ff168160ff16145b610854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084b906111db565b60405180910390fd5b60008560ff16036108b2578360ff1644604051602001610874919061121c565b6040516020818303038152906040528051906020012060001c6108979190611237565b600260126101000a81548160ff021916908360ff1602179055505b80856108be9190611268565b945084600260116101000a81548160ff021916908360ff1602179055508360ff168560ff16036108fc57604b436108f5919061129d565b6000819055505b8260ff168160ff161015610a015760003373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168386610960919061115a565b60ff1661096d9190610f69565b60405161097990610fdc565b60006040518083038185875af1925050503d80600081146109b6576040519150601f19603f3d011682016040523d82523d6000602084013e6109bb565b606091505b50509050806109ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f69061131d565b60405180910390fd5b505b610a17338287610a11919061115a565b87610a20565b50505050505050565b5b8060ff168260ff161015610c2a576000600360008460ff1660ff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083600360008560ff1660ff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610b42575073dead00000000000000004206942069420694206973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015610b635750600260129054906101000a900460ff1660ff168360ff1614155b15610c185760008173ffffffffffffffffffffffffffffffffffffffff16600154604051610b9090610fdc565b60006040518083038185875af1925050503d8060008114610bcd576040519150601f19603f3d011682016040523d82523d6000602084013e610bd2565b606091505b5050905080610c16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0d90611389565b60405180910390fd5b505b82610c2290610f17565b925050610a21565b505050565b600080fd5b600060ff82169050919050565b610c4a81610c34565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b600060208284031215610c8357610c82610c2f565b5b6000610c9184828501610c58565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc582610c9a565b9050919050565b610cd581610cba565b82525050565b6000602082019050610cf06000830184610ccc565b92915050565b6000819050919050565b610d0981610cf6565b82525050565b6000602082019050610d246000830184610d00565b92915050565b610d3381610c34565b82525050565b6000602082019050610d4e6000830184610d2a565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b610d7981610d54565b82525050565b6000602082019050610d946000830184610d70565b92915050565b60008115159050919050565b610daf81610d9a565b8114610dba57600080fd5b50565b600081359050610dcc81610da6565b92915050565b600060208284031215610de857610de7610c2f565b5b6000610df684828501610dbd565b91505092915050565b600082825260208201905092915050565b7f4e6565647320746f206265206e6f6e2d7a65726f2e0000000000000000000000600082015250565b6000610e46601583610dff565b9150610e5182610e10565b602082019050919050565b60006020820190508181036000830152610e7581610e39565b9050919050565b7f47616d6520696e2070726f67726573732e000000000000000000000000000000600082015250565b6000610eb2601183610dff565b9150610ebd82610e7c565b602082019050919050565b60006020820190508181036000830152610ee181610ea5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2282610c34565b915060ff8203610f3557610f34610ee8565b5b600182019050919050565b6000610f4b82610c34565b915060008203610f5e57610f5d610ee8565b5b600182039050919050565b6000610f7482610cf6565b9150610f7f83610cf6565b9250828202610f8d81610cf6565b91508282048414831517610fa457610fa3610ee8565b5b5092915050565b600081905092915050565b50565b6000610fc6600083610fab565b9150610fd182610fb6565b600082019050919050565b6000610fe782610fb9565b9150819050919050565b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b6000611027601283610dff565b915061103282610ff1565b602082019050919050565b600060208201905081810360008301526110568161101a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061109782610d54565b91506110a283610d54565b9250826110b2576110b161105d565b5b828206905092915050565b7f4e6565647320746f206265206d756c7469706c65206f66207374616b652e0000600082015250565b60006110f3601e83610dff565b91506110fe826110bd565b602082019050919050565b60006020820190508181036000830152611122816110e6565b9050919050565b600061113482610d54565b915061113f83610d54565b92508261114f5761114e61105d565b5b828204905092915050565b600061116582610c34565b915061117083610c34565b9250828203905060ff81111561118957611188610ee8565b5b92915050565b7f4578616374206f72646572206e6f74206d65742e000000000000000000000000600082015250565b60006111c5601483610dff565b91506111d08261118f565b602082019050919050565b600060208201905081810360008301526111f4816111b8565b9050919050565b6000819050919050565b61121661121182610cf6565b6111fb565b82525050565b60006112288284611205565b60208201915081905092915050565b600061124282610cf6565b915061124d83610cf6565b92508261125d5761125c61105d565b5b828206905092915050565b600061127382610c34565b915061127e83610c34565b9250828201905060ff81111561129757611296610ee8565b5b92915050565b60006112a882610cf6565b91506112b383610cf6565b92508282019050808211156112cb576112ca610ee8565b5b92915050565b7f526566756e64206661696c65642e000000000000000000000000000000000000600082015250565b6000611307600e83610dff565b9150611312826112d1565b602082019050919050565b60006020820190508181036000830152611336816112fa565b9050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b6000611373601083610dff565b915061137e8261133d565b602082019050919050565b600060208201905081810360008301526113a281611366565b905091905056fea26469706673582212209c10eadbf19d3c9131afa7c6cb73820204845ae3cffdd80020b3334302da692f64736f6c63430008110033";

type GroatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GroatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Groat__factory extends ContractFactory {
  constructor(...args: GroatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stake: PromiseOrValue<BigNumberish>,
    _maxPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Groat> {
    return super.deploy(_stake, _maxPlayers, overrides || {}) as Promise<Groat>;
  }
  override getDeployTransaction(
    _stake: PromiseOrValue<BigNumberish>,
    _maxPlayers: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stake, _maxPlayers, overrides || {});
  }
  override attach(address: string): Groat {
    return super.attach(address) as Groat;
  }
  override connect(signer: Signer): Groat__factory {
    return super.connect(signer) as Groat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GroatInterface {
    return new utils.Interface(_abi) as GroatInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Groat {
    return new Contract(address, _abi, signerOrProvider) as Groat;
  }
}
