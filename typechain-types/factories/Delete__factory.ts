/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Delete, DeleteInterface } from "../Delete";

const _abi = [
  {
    inputs: [],
    name: "bitmap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deleteEntries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fillEntries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610102806100206000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80631b5d23521460415780631cf5701a14605b57806333d6a9b7146063575b600080fd5b6047606b565b6040516052919060b3565b60405180910390f35b60616071565b005b60696093565b005b60005481565b6001600080828254179250508190555060026000808282541792505081905550565b60008081905550565b6000819050919050565b60ad81609c565b82525050565b600060208201905060c6600083018460a6565b9291505056fea26469706673582212200ee96eb502d341717fb349b2cdf289647f0887007f1c776d6bb0e5074414c48164736f6c63430008110033";

type DeleteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeleteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Delete__factory extends ContractFactory {
  constructor(...args: DeleteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Delete> {
    return super.deploy(overrides || {}) as Promise<Delete>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Delete {
    return super.attach(address) as Delete;
  }
  override connect(signer: Signer): Delete__factory {
    return super.connect(signer) as Delete__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeleteInterface {
    return new utils.Interface(_abi) as DeleteInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Delete {
    return new Contract(address, _abi, signerOrProvider) as Delete;
  }
}
